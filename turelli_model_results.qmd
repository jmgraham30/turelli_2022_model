---
title: "Wolbachia Infection Frequency"
subtitle: "Reproducing Turelli Model Results"
format: 
  html:
    echo: true
    code-fold: true
    code-summary: "Show the code"
    toc: true
    toc-location: left
    self-contained: true
bibliography: turelli_bib.bib
---

```{r}
#| message: false


library(tidyverse)
library(ggthemes)
library(scales)
library(latex2exp)

theme_set(theme_minimal(base_size=13))

update_geom_defaults("point", list(color = "midnightblue", alpha = 0.8))

source("R/infection_frequency.R")
```

## The Model

$$
p_{t+1} = \frac{p_{t}F(1 - \mu)}{1 + p_{t}(F - 1 - s_{h}) + p_{t}^{2}s_{h}(1 - \mu F)}
$$


$$
q_{ij} = \left(\begin{array}{c} N \\ j \end{array}\right)(p^{\ast})^{j}(1 - p^{\ast})^{N - j}
$$


## Implementation

```{r}
#| eval: false

infection_frequency_step <- function(p_t,F_val,mu_val,sh_val){
  
  num_exp <- p_t*F_val*(1-mu_val)
  den_exp <- 1 + p_t*(F_val - 1 - sh_val) + (p_t^2)*sh_val*(1 - mu_val*F_val)
  
  p_t1 <- num_exp/den_exp
  
  return(max(0.0,min(p_t1,1.0)))
  
}
```


```{r}
#| eval: false

turelli_iteration <- function(p_val,F_val_m,F_val_CV,
                              sh_val,mu_val,N){
  
  F_val_r <- rnorm(1, mean=log(F_val_m), sd=sqrt(log(F_val_CV^2 + 1))) |>
    exp()
  p_star <- infection_frequency_step(p_val, F_val_r, mu_val, sh_val)
  
  return(rbinom(1, N, p_star) / N )
  
}
```


```{r}
#| eval: false

turelli_simulation <- function(p_0,F_val_m,F_val_CV,
                               sh_val,mu_val,N,
                               max_iter=10^10, thresh = 10^(-8)){
  
  gen_i <- 0
  
  while (gen_i < max_iter & p_0 > thresh){
    p_0 <- turelli_iteration(p_0,F_val_m=F_val_m,F_val_CV=F_val_CV,
                             sh_val=sh_val,mu_val=mu_val,N=N)
    gen_i <- gen_i + 1
  }
  
  return(gen_i)
  
}
```


```{r}
#| label: fig-sim_example
#| fig-cap: A single simulation of the Turelli model, here $s_{h} = 0$.


p_0 <- 0.4
F_val_m <- 1.021
F_val_CV <- 0.4

mu_val <- 0.02
sh_val <- 0.0

N <- 1000

p <- turelli_simulation_p(p_0,F_val_m,F_val_CV,
                          sh_val,mu_val,N)

tibble(p=p) |>
  ggplot(aes(x=1:length(p),y=p)) +
  geom_point() +
  ylim(c(0,1)) + 
  labs(x = "Generation", y = "Frequency of infection")
```

## Results

```{r}
#| message: false

# Read in data
df_1 <- read_csv("model_results/fig_02_data_1.csv")
df_2 <- read_csv("model_results/fig_02_data_2.csv")
```



```{r}
#| label: fig-first_F
#| fig-cap: Distribution of persistence times for $Median_{F} = 1.021$.

df_1 |>
  ggplot(aes(x=t_f)) + 
  geom_histogram(bins=20,color="white",fill="steelblue") + 
  scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
                labels = trans_format("log10", math_format(10^.x))) +
  labs(x = TeX("$T_{Loss}$"))
```


```{r}
#| label: fig-second_F
#| fig-cap: Distribution of persistence times for $Median_{F} = 1.05$.

df_2 |>
  ggplot(aes(x=t_f)) + 
  geom_histogram(bins=20,color="white",fill="steelblue") + 
  scale_x_log10(breaks = trans_breaks("log10", function(x) 10^x),
                labels = trans_format("log10", math_format(10^.x))) +
  labs(x = TeX("$T_{Loss}$"))
```




